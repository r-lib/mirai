% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/daemons.R
\name{serial_config}
\alias{serial_config}
\title{Serialization Configuration}
\usage{
serial_config(class, sfunc, ufunc, vec = FALSE)
}
\arguments{
\item{class}{the class of reference object (as a character string) that these
functions are applied to, e.g. 'ArrowTabular' or 'torch_tensor'.}

\item{sfunc}{serialization function: must accept a reference object (or list
of objects) inheriting from \sQuote{class} and return a raw vector.}

\item{ufunc}{unserialization function: must accept a raw vector and return
a reference object (or list of reference objects).}

\item{vec}{[default FALSE] if FALSE the functions must accept and return
reference objects individually e.g. \code{arrow::write_to_raw} and
\code{arrow::read_ipc_stream}. If TRUE, the functions are vectorized and
must accept and return a list of reference objects, e.g.
\code{torch::torch_serialize} and \code{torch::torch_load}.}
}
\value{
A list in the required format to be supplied to the ‘serial’ argument
    of \code{\link{daemons}}, \code{\link{daemon}}, \code{\link{launch_local}},
    \code{\link{launch_remote}} etc.
}
\description{
Registers custom serialization and unserialization functions for sending and
    receiving reference objects.
}
\examples{
cfg <- serial_config(
  class = "torch_tensor",
  sfunc = function(x) serialize(x, NULL),
  ufunc = base::unserialize,
  vec = TRUE
)
cfg

}
